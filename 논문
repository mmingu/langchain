인공지능에 언어를 학습시키기 위해선 문서를 준비한다 . Text, Html, PDF 등 이러한 형식들을 ㅇㅇ
사용을 할수있다. 확장자에 따라서 사용하는 기능이 달라진다. 문서 로더를 사용해 문서를 처리해서 랭체인과 인공지능이 사용할수있는 문서형태로 가공한다. 
 문서 분할을 할때 많은 양의 데이터를 학습하고 이해하지 못하기 때문에 조각을 분할을 어떻게 할지, 한조각의 길이, 조각 사이의 중복 시킬 내용의 길이를 정해준다. 
 임베딩을 실행하기 위해서는 임베딩 도구를 써야한다. 임베딩도구는 여러가지가있는데 컴퓨터사양, 비용 적인 측면을 고려해서 사용하면된다.  클라우드 환경에서는  Elasticsearch 등과 같이 다른 벡터 기반 데이터 베이스로 대체 가능하다. 본 논문에서는 OpenAI임베딩 을 사용한다. 
 생성된 임베딩 벡터를 저장소에 저장을한다 . 컴퓨터에 있는 RAM에 kkjkj려서 저장할수있지만 휘발성이라 다음번에 다시만들어야한다. 간단한 것은 메모리에 사용하면 된다. 그리고 임베딩 DB에 저장하는 방식이있다 임베딩 DB에 따라 검색 성능과 효율이 달라지고 처리성능에도 차이가있기때문에 적절하게 골라야한다 .  Pinecone라는 임베딩DB 를 사용한다.

구현결과 ㅎㅎ
 질문을 정해서 입력한다. 여기서 유사도가 중요하다. 유사도를 높이기위해서 관련성이 높은 키워드를 잘 골라야 한다. 그러면 벡터 저장소에서 유사도 검색이 시작된다. 임베딩툴에따라 속도가 달라진다. 그 후 임베딩 벡터 저장소에서 유사도가 높은 정보들이 선택된다. 여기서 몇개를 가져올지 지정을 할수있다.  질문과 벡터DB안에있는 정보를 인공지능에 입력을 한다. 랭체인 내장 프롬포트에 따라 자동으로 진행 된다. 이제 인공지능이 질문을 바탕으로 정보를 해석한다.
인공지능을 무엇을 선택했는지에 따라 성능이달라진다. 최종으로 답변을 화면에 출력해준다.


결론 단점 
그러나 현재 시험 해본 경험으로는 엠베딩 도구의 속도가 느리고 체감상 질문의 답변효율이 아직 최적화가 이루어 지지않은 상황이다.그리고 임베딩 하는 자료의 양 과 컴퓨터 성능이 아직까지는 최적화가 안됨 더 좋은 성능을 위해서는 비용이 들어갈수 밖에 없다. 인공지능도 비용이 들어간다. 



참고문헌








